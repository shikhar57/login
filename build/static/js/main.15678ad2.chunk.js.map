{"version":3,"sources":["app/actions/constants.js","app/reducers/index.js","app/reducers/apistatus/apistatus.js","app/store/store.js","app/actions/apitransport/apitransport.js","app/App.js","registerServiceWorker.js","index.js"],"names":["constants","_constants","APISTATUS","RESET_STATUS","LOGIN","LOGOUT","VALIDATE_USER","USER_DETAILS","NOTIFICATION_COUNT","NOTIFICATIONS","GET_TEMPLATE_NAMES","GET_TASK_DETAILS","REQ_FILTER_DATA","GET_ORDER_LIST","GET_TEMPLATE_BY_SITE","GET_SUBTASK_NAMES","SEARCH_TEXT","SAVE_ORDER_DATA","GET_COMMON_FIELDS","GET_SUBTASK_DATA","DELETE_ORDER","GET_ASSIGNEES","DRAFT_ORDER_DATA","GET_POSTEDMESSAGES","Object","defineProperty","reducers","apistatus","state","arguments","length","undefined","action","type","C","payload","middlewares","config","key","storage","reducer","persistCombineReducers","rootReducer","push","thunk","storeFactory","createStore","stateData","compose","applyMiddleware","apply","dispatchAPI","api","method","dispatch","apiStatusAsync","axios","create","getCustomConfigs","post","apiEndPoint","getBody","getHeaders","then","res","processResponse","data","dispatchAPIAsync","catch","err","console","log","get","put","delete","getPayload","progress","error","message","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","validateUserTimer","corporateID","configurableNames","userDetails","Component","withRouter","connect","bindActionCreators","APITransport","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","react_default","a","createElement","es","store","react_router_dom","app_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.15678ad2.chunk.js","sourcesContent":["const constants = {\n    APISTATUS: 'APISTATUS',\n    RESET_STATUS: 'RESET_STATUS',\n    LOGIN: 'LOGIN',\n    LOGOUT: 'LOGOUT',\n    VALIDATE_USER: 'VALIDATE_USER',\n    USER_DETAILS: 'USER_DETAILS',\n    NOTIFICATION_COUNT: 'NOTIFICATION_COUNT',\n    NOTIFICATIONS: 'NOTIFICATIONS',\n    GET_TEMPLATE_NAMES: 'GET_TEMPLATE_NAMES',\n    GET_TASK_DETAILS: 'GET_TASK_DETAILS',\n    REQ_FILTER_DATA: 'REQ_FILTER_DATA',\n    GET_ORDER_LIST: 'GET_ORDER_LIST',\n    GET_TEMPLATE_BY_SITE: 'GET_TEMPLATE_BY_SITE',\n    GET_SUBTASK_NAMES: 'GET_SUBTASK_NAMES',\n    SEARCH_TEXT: 'SEARCH_TEXT',\n    SAVE_ORDER_DATA: 'SAVE_ORDER_DATA',\n    GET_COMMON_FIELDS: 'GET_COMMON_FIELDS',\n    GET_SUBTASK_DATA: 'GET_SUBTASK_DATA',\n    DELETE_ORDER: 'DELETE_ORDER',\n    GET_ASSIGNEES: 'GET_ASSIGNEES',\n    DRAFT_ORDER_DATA: 'DRAFT_ORDER_DATA',\n    GET_POSTEDMESSAGES: 'GET_POSTEDMESSAGES',\n    GET_ASSIGNEES: 'GET_ASSIGNEES',\n    GET_NEXT_STATUS: 'GET_NEXT_STATUS',\n    DRAFT_ORDER_DATA: 'DRAFT_ORDER_DATA',\n    GET_SUBTASK_DETAILS: 'GET_SUBTASK_DETAILS',\n    DELETE_ORDER: 'DELETE_ORDER',\n    GET_TASK_HISTORY: 'GET_TASK_HISTORY',\n    GET_ESTIMATED_COST: 'GET_ESTIMATED_COST',\n    GET_SUBTASK_ESTIMATED_COST: 'GET_SUBTASK_ESTIMATED_COST',\n    POST_NEWMESSAGE: 'POST_NEWMESSAGE',\n    GET_ACTIVITY_DATA: 'GET_ACTIVITY_DATA',\n    GET_WORKFLOW_STATUS: 'GET_WORKFLOW_STATUS',\n    POST_ORDEREMAIL: 'POST_ORDEREMAIL',\n    GET_ORDERDOWNLOAD: 'GET_ORDERDOWNLOAD',\n    GET_PAGE_STATE: 'GET_PAGE_STATE',\n    GET_USER_BY_SITE : 'GET_USER_BY_SITE',\n    UPDATE_ORDER_DATA:'UPDATE_ORDER_DATA',\n    GET_SUBTASK_TEMPLATE_BY_SITE:'GET_SUBTASK_TEMPLATE_BY_SITE',\n    GET_PRODUCTION_REPORT : 'GET_PRODUCTION_REPORT',\n    UPDATE_SUBTASK_DATA:'UPDATE_SUBTASK_DATA',\n    GET_REPORT_COLUMN_HEADER_FIELDS: 'GET_REPORT_COLUMN_HEADER_FIELDS',\n    GET_DRAFTS_COUNT:\"GET_DRAFTS_COUNT\",\n    GET_DISPLAY_NAMES:\"GET_DISPLAY_NAMES\",\n    GET_ACTIVITY_ESTIMATED_COST: \"GET_ACTIVITY_ESTIMATED_COST\"\n}\nexport default constants\n\n\n","import apistatus from './apistatus/apistatus';\n\nexport default {\n    apistatus: apistatus,\n}","import C from '../../actions/constants';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case C.APISTATUS:\n            return action.payload\n        default:\n            return state\n    }\n}","/*\n * src/store.js\n * With initialState\n*/\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\nimport { createLogger }  from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistCombineReducers } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport stateData from '../data/initialstate.json'\n\nconst middlewares = [];\nconst config = {\n    key: 'root',\n    storage,\n}\nlet reducer = persistCombineReducers(config, rootReducer)\n\nmiddlewares.push(thunk);\nif (process.env.NODE_ENV === 'development') {\n    //middlewares.push(createLogger());\n}\n\nconst storeFactory = createStore (\n    reducer,\n    stateData,\n    (process.env.NODE_ENV === 'development') ? composeWithDevTools(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares))\n)\n\nexport default storeFactory;","import axios from 'axios';\nimport C from '../constants';\n\nexport default function dispatchAPI(api) {\n    if (api.method === 'POST' || api.method === 'post') {\n        return dispatch => {\n            if (api.type != 'NOTIFICATIONS') {\n                dispatch(apiStatusAsync(true, false, ''))\n            }\n            axios.create(api.getCustomConfigs()).post(api.apiEndPoint(), api.getBody(), api.getHeaders())\n                .then(function (res) {\n                    if (api.processResponse(res.data)) {\n                        dispatch(dispatchAPIAsync(api));\n                        dispatch(apiStatusAsync(false, false, 'api successful'))\n                    } else {\n                        dispatch(apiStatusAsync(false, true, 'api failed because of missing response data'))\n                    }\n                })\n                .catch(function (err) {\n                    console.log(err)\n                    dispatch(apiStatusAsync(false, true, 'api failed'))\n                });\n        }\n    } if (api.method === 'GET' || api.method === 'get') {\n        return dispatch => {\n            dispatch(apiStatusAsync(true, false, ''))\n            axios.create(api.getCustomConfigs()).get(api.apiEndPoint(), api.getHeaders())\n                .then(function (res) {\n                    if (api.processResponse(res.data)) {\n                        dispatch(dispatchAPIAsync(api));\n                        dispatch(apiStatusAsync(false, false, 'api successful'))\n                    }\n                })\n                .catch(function (err) {\n                    console.log(err)\n                    dispatch(apiStatusAsync(false, true, 'api failed'))\n                });\n        }\n    } if (api.method === 'PUT' || api.method === 'put') {\n        return dispatch => {\n            dispatch(apiStatusAsync(true, false, ''))\n            axios.create(api.getCustomConfigs()).put(api.apiEndPoint(), api.getBody(), api.getHeaders())\n                .then(function (res) {\n                    if (api.processResponse(res.data)) {\n                        dispatch(dispatchAPIAsync(api));\n                        dispatch(apiStatusAsync(false, false, 'api successful'))\n                    }\n                })\n                .catch(function (err) {\n                    console.log(err)\n                    dispatch(apiStatusAsync(false, true, 'api failed'))\n                });\n        }\n    }\n    else if (api.method === 'DELETE' || api.method === 'delete') {\n        return dispatch => {\n            dispatch(apiStatusAsync(true, false, ''))\n            axios.create(api.getCustomConfigs()).delete(api.apiEndPoint(), api.getBody(), api.getHeaders())\n                .then(function (res) {\n                    if (api.processResponse(res.data)) {\n                        dispatch(dispatchAPIAsync(api));\n                        dispatch(apiStatusAsync(false, false, 'api successful'))\n                    }\n                })\n                .catch(function (err) {\n                    console.log(err)\n                    dispatch(apiStatusAsync(false, true, 'api failed'))\n                });\n        }\n    }\n}\n\nfunction dispatchAPIAsync(api) {\n    return {\n        type: api.type,\n        payload: api.getPayload()\n    }\n}\n\nfunction apiStatusAsync(progress, error, message) {\n    return {\n        type: C.APISTATUS,\n        payload: {\n            progress: progress,\n            error: error,\n            message: message\n        }\n    }\n}\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport APITransport from './actions/apitransport/apitransport';\nimport _ from 'lodash';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            validateUserTimer: 30000 * 60,\n            corporateID : true,\n            configurableNames:{}\n        }\n        this.userDetails = null;\n    }\n\n    render() {\n        return null\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        apistatus: state.apistatus\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        APITransport: APITransport\n    }, dispatch)\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                //console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                //console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport storeFactory from './app/store/store';\nimport App from './app/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(\n    <Provider store={storeFactory}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n    </Provider>,\n\n    document.getElementById('root')\n);\n\nregisterServiceWorker();"],"sourceRoot":""}